"use strict";
// Good practice rule - No magic number
Object.defineProperty(exports, "__esModule", { value: true });
exports.JSONQL_PARAMS_VALIDATOR_INFO = exports.ERROR_KEY = exports.DATA_KEY = exports.RETURNS_NAME = exports.OR_SEPERATOR = exports.KEY_WORD = exports.NUMBER_TYPE = exports.BOOLEAN_TYPE = exports.STRING_TYPE = exports.OBJECT_TYPE = exports.ARRAY_TYPE = exports.ALIAS_KEY = exports.CHECKER_KEY = exports.ARGS_KEY = exports.ENUM_KEY = exports.OPTIONAL_KEY = exports.TYPE_KEY = exports.ARRAY_TYPE_RGT = exports.ARRAY_TYPE_LFT = exports.DEFAULT_TYPE = exports.UNUSUAL_CASE_ERR = exports.EXCEPTION_CASE_ERR = exports.PARAMS_NOT_ARRAY_ERR = exports.ARGS_NOT_ARRAY_ERR = void 0;
const ARGS_NOT_ARRAY_ERR = `args is not an array! You might want to do: ES6 Array.from(arguments) or ES5 Array.prototype.slice.call(arguments)`;
exports.ARGS_NOT_ARRAY_ERR = ARGS_NOT_ARRAY_ERR;
const PARAMS_NOT_ARRAY_ERR = `params is not an array! Did something gone wrong when you generate the contract.json?`;
exports.PARAMS_NOT_ARRAY_ERR = PARAMS_NOT_ARRAY_ERR;
const EXCEPTION_CASE_ERR = 'Could not understand your arguments and parameter structure!';
exports.EXCEPTION_CASE_ERR = EXCEPTION_CASE_ERR;
const UNUSUAL_CASE_ERR = 'This is an unusual situation where the arguments are more than the params, but not mark as spread';
exports.UNUSUAL_CASE_ERR = UNUSUAL_CASE_ERR;
const RETURNS_NAME = 'returns';
exports.RETURNS_NAME = RETURNS_NAME;
const JSONQL_PARAMS_VALIDATOR_INFO = '__PLACEHOLDER__';
exports.JSONQL_PARAMS_VALIDATOR_INFO = JSONQL_PARAMS_VALIDATOR_INFO;
const constants_1 = require("@jsonql/constants");
Object.defineProperty(exports, "DEFAULT_TYPE", { enumerable: true, get: function () { return constants_1.DEFAULT_TYPE; } });
Object.defineProperty(exports, "DATA_KEY", { enumerable: true, get: function () { return constants_1.DATA_KEY; } });
Object.defineProperty(exports, "ERROR_KEY", { enumerable: true, get: function () { return constants_1.ERROR_KEY; } });
Object.defineProperty(exports, "TYPE_KEY", { enumerable: true, get: function () { return constants_1.TYPE_KEY; } });
Object.defineProperty(exports, "OPTIONAL_KEY", { enumerable: true, get: function () { return constants_1.OPTIONAL_KEY; } });
Object.defineProperty(exports, "ENUM_KEY", { enumerable: true, get: function () { return constants_1.ENUM_KEY; } });
Object.defineProperty(exports, "ARGS_KEY", { enumerable: true, get: function () { return constants_1.ARGS_KEY; } });
Object.defineProperty(exports, "CHECKER_KEY", { enumerable: true, get: function () { return constants_1.CHECKER_KEY; } });
Object.defineProperty(exports, "ALIAS_KEY", { enumerable: true, get: function () { return constants_1.ALIAS_KEY; } });
Object.defineProperty(exports, "ARRAY_TYPE_LFT", { enumerable: true, get: function () { return constants_1.ARRAY_TYPE_LFT; } });
Object.defineProperty(exports, "ARRAY_TYPE_RGT", { enumerable: true, get: function () { return constants_1.ARRAY_TYPE_RGT; } });
Object.defineProperty(exports, "ARRAY_TYPE", { enumerable: true, get: function () { return constants_1.ARRAY_TYPE; } });
Object.defineProperty(exports, "OBJECT_TYPE", { enumerable: true, get: function () { return constants_1.OBJECT_TYPE; } });
Object.defineProperty(exports, "STRING_TYPE", { enumerable: true, get: function () { return constants_1.STRING_TYPE; } });
Object.defineProperty(exports, "BOOLEAN_TYPE", { enumerable: true, get: function () { return constants_1.BOOLEAN_TYPE; } });
Object.defineProperty(exports, "NUMBER_TYPE", { enumerable: true, get: function () { return constants_1.NUMBER_TYPE; } });
Object.defineProperty(exports, "KEY_WORD", { enumerable: true, get: function () { return constants_1.KEY_WORD; } });
Object.defineProperty(exports, "OR_SEPERATOR", { enumerable: true, get: function () { return constants_1.OR_SEPERATOR; } });
