{
  type: 'Module',
  span: { start: 0, end: 91, ctxt: 0 },
  body: [
    {
      type: 'ExportDeclaration',
      span: { start: 0, end: 91, ctxt: 0 },
      declaration: {
        type: 'FunctionDeclaration',
        identifier: {
          type: 'Identifier',
          span: { start: 16, end: 25, ctxt: 0 },
          value: 'mixSpread',
          optional: false
        },
        declare: false,
        params: [
          {
            type: 'Parameter',
            span: { start: 26, end: 38, ctxt: 0 },
            decorators: [],
            pat: {
              type: 'Identifier',
              span: { start: 26, end: 38, ctxt: 0 },
              value: 'arg1',
              optional: false,
              typeAnnotation: {
                type: 'TsTypeAnnotation',
                span: { start: 30, end: 38, ctxt: 0 },
                typeAnnotation: {
                  type: 'TsKeywordType',
                  span: { start: 32, end: 38, ctxt: 0 },
                  kind: 'number'
                }
              }
            }
          },
          {
            type: 'Parameter',
            span: { start: 40, end: 57, ctxt: 0 },
            decorators: [],
            pat: {
              type: 'RestElement',
              span: { start: 40, end: 57, ctxt: 0 },
              rest: { start: 40, end: 43, ctxt: 0 },
              argument: {
                type: 'Identifier',
                span: { start: 43, end: 47, ctxt: 0 },
                value: 'arg2',
                optional: false,
                typeAnnotation: null
              },
              typeAnnotation: {
                type: 'TsTypeAnnotation',
                span: { start: 47, end: 57, ctxt: 0 },
                typeAnnotation: {
                  type: 'TsArrayType',
                  span: { start: 49, end: 57, ctxt: 0 },
                  elemType: {
                    type: 'TsKeywordType',
                    span: { start: 49, end: 55, ctxt: 0 },
                    kind: 'string'
                  }
                }
              }
            }
          }
        ],
        decorators: [],
        span: { start: 7, end: 91, ctxt: 0 },
        body: {
          type: 'BlockStatement',
          span: { start: 59, end: 91, ctxt: 0 },
          stmts: [
            {
              type: 'ReturnStatement',
              span: { start: 64, end: 88, ctxt: 0 },
              argument: {
                type: 'TemplateLiteral',
                span: { start: 71, end: 88, ctxt: 0 },
                expressions: [
                  {
                    type: 'Identifier',
                    span: { start: 82, end: 86, ctxt: 0 },
                    value: 'arg1',
                    optional: false
                  }
                ],
                quasis: [
                  {
                    type: 'TemplateElement',
                    span: { start: 72, end: 80, ctxt: 0 },
                    tail: false,
                    cooked: 'arg1 is ',
                    raw: 'arg1 is '
                  },
                  {
                    type: 'TemplateElement',
                    span: { start: 87, end: 87, ctxt: 0 },
                    tail: true,
                    cooked: '',
                    raw: ''
                  }
                ]
              }
            }
          ]
        },
        generator: false,
        async: false,
        typeParameters: null,
        returnType: null
      }
    }
  ],
  interpreter: null
}
