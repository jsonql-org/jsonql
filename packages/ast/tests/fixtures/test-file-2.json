{
  type: 'Module',
  span: { start: 41, end: 303, ctxt: 0 },
  body: [
    {
      type: 'ExportDefaultDeclaration',
      span: { start: 41, end: 200, ctxt: 0 },
      decl: {
        type: 'FunctionExpression',
        identifier: {
          type: 'Identifier',
          span: { start: 65, end: 73, ctxt: 0 },
          value: 'resolver',
          optional: false
        },
        params: [
          {
            type: 'Parameter',
            span: { start: 74, end: 86, ctxt: 0 },
            decorators: [],
            pat: {
              type: 'Identifier',
              span: { start: 74, end: 86, ctxt: 0 },
              value: 'arg1',
              optional: false,
              typeAnnotation: {
                type: 'TsTypeAnnotation',
                span: { start: 78, end: 86, ctxt: 0 },
                typeAnnotation: {
                  type: 'TsKeywordType',
                  span: { start: 80, end: 86, ctxt: 0 },
                  kind: 'string'
                }
              }
            }
          },
          {
            type: 'Parameter',
            span: { start: 88, end: 109, ctxt: 0 },
            decorators: [],
            pat: {
              type: 'Identifier',
              span: { start: 88, end: 109, ctxt: 0 },
              value: 'arg2',
              optional: false,
              typeAnnotation: {
                type: 'TsTypeAnnotation',
                span: { start: 92, end: 109, ctxt: 0 },
                typeAnnotation: {
                  type: 'TsUnionType',
                  span: { start: 94, end: 109, ctxt: 0 },
                  types: [
                    {
                      type: 'TsKeywordType',
                      span: { start: 94, end: 100, ctxt: 0 },
                      kind: 'string'
                    },
                    {
                      type: 'TsKeywordType',
                      span: { start: 103, end: 109, ctxt: 0 },
                      kind: 'number'
                    }
                  ]
                }
              }
            }
          },
          {
            type: 'Parameter',
            span: { start: 111, end: 125, ctxt: 0 },
            decorators: [],
            pat: {
              type: 'Identifier',
              span: { start: 111, end: 125, ctxt: 0 },
              value: 'arg3',
              optional: true,
              typeAnnotation: {
                type: 'TsTypeAnnotation',
                span: { start: 116, end: 125, ctxt: 0 },
                typeAnnotation: {
                  type: 'TsKeywordType',
                  span: { start: 118, end: 125, ctxt: 0 },
                  kind: 'boolean'
                }
              }
            }
          }
        ],
        decorators: [],
        span: { start: 56, end: 200, ctxt: 0 },
        body: {
          type: 'BlockStatement',
          span: { start: 127, end: 200, ctxt: 0 },
          stmts: [
            {
              type: 'ReturnStatement',
              span: { start: 132, end: 198, ctxt: 0 },
              argument: {
                type: 'ObjectExpression',
                span: { start: 139, end: 198, ctxt: 0 },
                properties: [
                  {
                    type: 'Identifier',
                    span: { start: 145, end: 149, ctxt: 0 },
                    value: 'arg1',
                    optional: false
                  },
                  {
                    type: 'Identifier',
                    span: { start: 155, end: 159, ctxt: 0 },
                    value: 'arg2',
                    optional: false
                  },
                  {
                    type: 'KeyValueProperty',
                    key: {
                      type: 'Identifier',
                      span: { start: 165, end: 169, ctxt: 0 },
                      value: 'arg3',
                      optional: false
                    },
                    value: {
                      type: 'ConditionalExpression',
                      span: { start: 171, end: 194, ctxt: 0 },
                      test: {
                        type: 'Identifier',
                        span: { start: 171, end: 175, ctxt: 0 },
                        value: 'arg3',
                        optional: false
                      },
                      consequent: {
                        type: 'Identifier',
                        span: { start: 178, end: 182, ctxt: 0 },
                        value: 'arg3',
                        optional: false
                      },
                      alternate: {
                        type: 'StringLiteral',
                        span: { start: 185, end: 194, ctxt: 0 },
                        value: 'NOTHING',
                        raw: "'NOTHING'"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        generator: false,
        async: false,
        typeParameters: null,
        returnType: null
      }
    },
    {
      type: 'ExportDeclaration',
      span: { start: 229, end: 303, ctxt: 0 },
      declaration: {
        type: 'VariableDeclaration',
        span: { start: 236, end: 303, ctxt: 0 },
        kind: 'const',
        declare: false,
        declarations: [
          {
            type: 'VariableDeclarator',
            span: { start: 242, end: 303, ctxt: 0 },
            id: {
              type: 'Identifier',
              span: { start: 242, end: 250, ctxt: 0 },
              value: 'validate',
              optional: false,
              typeAnnotation: null
            },
            init: {
              type: 'ObjectExpression',
              span: { start: 253, end: 303, ctxt: 0 },
              properties: [
                {
                  type: 'KeyValueProperty',
                  key: {
                    type: 'Identifier',
                    span: { start: 257, end: 261, ctxt: 0 },
                    value: 'arg1',
                    optional: false
                  },
                  value: {
                    type: 'ObjectExpression',
                    span: { start: 263, end: 269, ctxt: 0 },
                    properties: []
                  }
                },
                {
                  type: 'KeyValueProperty',
                  key: {
                    type: 'Identifier',
                    span: { start: 273, end: 277, ctxt: 0 },
                    value: 'arg2',
                    optional: false
                  },
                  value: {
                    type: 'ObjectExpression',
                    span: { start: 279, end: 285, ctxt: 0 },
                    properties: []
                  }
                },
                {
                  type: 'KeyValueProperty',
                  key: {
                    type: 'Identifier',
                    span: { start: 289, end: 293, ctxt: 0 },
                    value: 'arg3',
                    optional: false
                  },
                  value: {
                    type: 'ObjectExpression',
                    span: { start: 295, end: 301, ctxt: 0 },
                    properties: []
                  }
                }
              ]
            },
            definite: false
          }
        ]
      }
    }
  ],
  interpreter: null
}
