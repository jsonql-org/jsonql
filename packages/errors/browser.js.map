{
  "version": 3,
  "sources": ["../constants/browser.js", "src/constants.ts", "src/base/406-error.ts", "src/base/500-error.ts", "src/base/forbidden-error.ts", "src/base/authorisation-error.ts", "src/base/contract-auth-error.ts", "src/base/resolver-app-error.ts", "src/base/resolver-not-found-error.ts", "src/base/enum-error.ts", "src/base/type-error.ts", "src/base/checker-error.ts", "src/base/validation-error.ts", "src/base/error.ts", "src/base/server-error.ts", "src/base/general-error.ts", "src/fn/final-catch.ts", "src/fn/get-error-by-status.ts", "src/fn/get-error-name-by-instance.ts"],
  "sourcesContent": ["(() => {\n  // src/base.mjs\n  var EXT = \"js\";\n  var TS_EXT = \"ts\";\n  var HELLO = \"Hello world!\";\n  var HELLO_FN = \"helloWorld\";\n  var DATA_KEY = \"data\";\n  var ERROR_KEY = \"error\";\n  var HEADERS_KEY = \"headers\";\n  var JSONQL_PATH = \"jsonql\";\n  var CONTENT_TYPE = \"application/vnd.api+json\";\n  var CHARSET = \"charset=utf-8\";\n  var DEFAULT_HEADER = {\n    \"Accept\": CONTENT_TYPE,\n    \"Content-Type\": [CONTENT_TYPE, CHARSET].join(\"\")\n  };\n  var DEFAULT_TYPE = \"any\";\n  var DEFAULT_CONTRACT_FILE_NAME = \"contract.json\";\n  var PUBLIC_CONTRACT_FILE_NAME = \"public-contract.json\";\n  var DEFAULT_RESOLVER_LIST_FILE_NAME = \"resolver.js\";\n  var DEFAULT_RESOLVER_IMPORT_FILE_NAME = \"import.js\";\n  var MODULE_TYPE = \"module\";\n  var SCRIPT_TYPE = \"script\";\n  var QUERY_NAME = \"query\";\n  var MUTATION_NAME = \"mutation\";\n  var SOCKET_NAME = \"socket\";\n  var SOCKET_AUTH_NAME = \"socket-auth\";\n  var EXTERNAL_NAME = \"external\";\n  var INTERCEPTOR_NAME = \"interceptor\";\n  var PLUGIN_NAME = \"plugin\";\n  var CONTRACT_NAME = \"contract\";\n  var MIDDLEWARE_NAME = \"middleware\";\n  var RESOLVER_TYPES = [\n    QUERY_NAME,\n    MUTATION_NAME,\n    SOCKET_NAME,\n    SOCKET_AUTH_NAME\n  ];\n  var PAYLOAD_PARAM_NAME = \"payload\";\n  var CONDITION_PARAM_NAME = \"condition\";\n  var RESOLVER_PARAM_NAME = \"resolverName\";\n  var QUERY_ARG_NAME = \"args\";\n  var TIMESTAMP_PARAM_NAME = \"TS\";\n  var MUTATION_ARGS = [\n    RESOLVER_PARAM_NAME,\n    PAYLOAD_PARAM_NAME,\n    CONDITION_PARAM_NAME\n  ];\n  var JSONP_CALLBACK_NAME = \"jsonqlJsonpCallback\";\n  var API_REQUEST_METHODS = [\"POST\", \"PUT\"];\n  var CONTRACT_REQUEST_METHODS = [\"GET\", \"HEAD\"];\n  var KEY_WORD = \"continue\";\n  var PUBLIC_KEY = \"public\";\n  var PRIVATE_KEY = \"private\";\n  var AUTH_TYPE = \"auth\";\n  var AUTH_NAME = AUTH_TYPE;\n  var LOGIN_FN_NAME = \"login\";\n  var LOGOUT_FN_NAME = \"logout\";\n  var VALIDATOR_FN_NAME = \"validator\";\n  var DISCONNECT_FN_NAME = \"disconnect\";\n  var SWITCH_USER_FN_NAME = \"switch-user\";\n  var AUTH_HEADER = \"Authorization\";\n  var AUTH_CHECK_HEADER = \"authorization\";\n  var BEARER = \"Bearer\";\n  var CREDENTIAL_STORAGE_KEY = \"jsonqlcredential\";\n  var CLIENT_STORAGE_KEY = \"jsonqlstore\";\n  var CLIENT_AUTH_KEY = \"jsonqlauthkey\";\n  var INDEX_KEY = \"index\";\n  var CONTRACT_KEY_NAME = \"X-JSONQL-CV-KEY\";\n  var SHOW_CONTRACT_DESC_PARAM = { desc: \"y\" };\n  var DEFAULT_RESOLVER_DIR = \"resolvers\";\n  var DEFAULT_CONTRACT_DIR = \"contracts\";\n  var DEFAULT_KEYS_DIR = \"keys\";\n  var CJS_TYPE = \"cjs\";\n  var ES_TYPE = \"es\";\n  var TS_TYPE = \"ts\";\n  var ACCEPTED_JS_TYPES = [\n    CJS_TYPE,\n    ES_TYPE\n  ];\n  var RETURN_AS_FILE = \"file\";\n  var RETURN_AS_JSON = \"json\";\n  var RETURN_AS_ENUM = [\n    RETURN_AS_FILE,\n    RETURN_AS_JSON\n  ];\n  var NO_ERROR_MSG = \"No message\";\n  var NO_STATUS_CODE = -1;\n  var SUCCESS_STATUS = 200;\n  var UNAUTHORIZED_STATUS = 401;\n  var FORBIDDEN_STATUS = 403;\n  var NOT_FOUND_STATUS = 404;\n  var NOT_ACCEPTABLE_STATUS = 406;\n  var SERVER_INTERNAL_STATUS = 500;\n  var DEFAULT_PORT_NUM = 6557;\n  var CSRF_HEADER_KEY = \"X-CSRF-Token\";\n  var ORIGIN_HEADER_KEYS = [\"Origin\"];\n  var WILD_CARD_CHAR = \"*\";\n\n  // src/prop.mjs\n  var TYPE_KEY = \"type\";\n  var OPTIONAL_KEY = \"optional\";\n  var ENUM_KEY = \"enumv\";\n  var ARGS_KEY = \"args\";\n  var CHECKER_KEY = \"checker\";\n  var ALIAS_KEY = \"alias\";\n  var CHECKED_KEY = \"__checked__\";\n  var APP_DIR_PROP_KEY = \"appDir\";\n  var AUTH_TO_PROP_KEY = \"authTimeout\";\n  var ENABLE_AUTH_PROP_KEY = \"enableAuth\";\n  var USE_JWT_PROP_KEY = \"useJwt\";\n  var RESOLVER_DIR_PROP_KEY = \"resolverDir\";\n  var CONTRACT_DIR_PROP_KEY = \"contractDir\";\n  var INIT_CONNECTION_FN_NAME_PROP_KEY = \"initConnectionHandlerName\";\n  var LOGIN_FN_NAME_PROP_KEY = \"loginHandlerName\";\n  var LOGOUT_FN_NAME_PROP_KEY = \"logoutHandlerName\";\n  var DISCONNECT_FN_NAME_PROP_KEY = \"disconnectHandlerName\";\n  var SWITCH_USER_FN_NAME_PROP_KEY = \"switchUserHandlerName\";\n  var PUBLIC_FN_DIR_PROP_KEY = \"publicResolverDir\";\n  var PRIVATE_FN_DIR_DROP_KEY = \"privateResolverDir\";\n  var ALGORITHM_PROP_KEY = \"algorithm\";\n  var KEYS_DIR_PROP_KEY = \"keysDir\";\n  var SOCKET_IO_AUTH_TYPE_PROP_KEY = \"socketIoAuthType\";\n  var SERVER_INIT_OPT_PROP_KEY = \"serverInitOption\";\n  var SOCKET_TYPE_PROP_KEY = \"serverType\";\n  var SOCKET_TYPE_CLIENT_ALIAS = \"socketClientType\";\n  var SOCKET_TYPE_SERVER_ALIAS = \"socketServerType\";\n  var CSRF_PROP_KEY = \"csrf\";\n  var ALLOW_ORIGIN_PROP_KEY = \"allowOrigin\";\n  var STANDALONE_PROP_KEY = \"standalone\";\n  var DEBUG_ON_PROP_KEY = \"debugOn\";\n  var HOSTNAME_PROP_KEY = \"hostname\";\n  var NAMESAPCE_PROP_KEY = \"namespace\";\n  var FILE_PROP_KEY = \"file\";\n  var WS_OPT_PROP_KEY = \"wsOptions\";\n  var CONTRACT_PROP_KEY = \"contract\";\n  var TOKEN_PROP_KEY = \"token\";\n  var INIT_CLIENT_PROP_KEY = \"nodeClient\";\n  var INIT_CONTRACT_PROP_KEY = \"initContract\";\n  var CONTENT_TYPE_PROP_KEY = \"contentType\";\n  var RETURN_AS_PROP_KEY = \"returnAs\";\n  var NAME_PROP_KEY = \"appName\";\n  var EXPIRED_PROP_KEY = \"expired\";\n  var APP_ROOT_DIR_PROP_KEY = \"appRootDir\";\n  var JWT_TOKEN_OPT_PROP_KEY = \"jwtTokenOption\";\n  var ENABLE_JSONP_PROP_KEY = \"enableJsonp\";\n  var CONTRACT_WITH_DESC_PROP_KEY = \"contractWithDesc\";\n  var WITH_PUBLIC_CONTRACT_PROP_KEY = \"withPublicContract\";\n  var PUBLIC_KEY_NAME_PROP_KEY = \"publicKeyFileName\";\n  var PRIVATE_KEY_NAME_PROP_KEY = \"privateKeyFileName\";\n  var PUBLIC_NAMESPACE_PROP_KEY = \"publicNamespace\";\n  var PRIVATE_NAMESPACE_PROP_KEY = \"privateNamespace\";\n  var SECRET_PROP_KEY = \"secret\";\n  var NSP_INFO_PROP_KEY = \"nspInfo\";\n  var RSA_MODULE_LEN_PROP_KEY = \"rsaModulusLength\";\n  var JSONQL_PATH_PROP_KEY = \"jsonqlPath\";\n  var CONTRACT_KEY_PROP_KEY = \"contractKey\";\n  var CONTRACT_KEY_NAME_PROP_KEY = \"contractKeyName\";\n  var ENABLE_WEB_CONSOLE_PROP_KEY = \"enableWebConsole\";\n  var JS_TYPE_PROP_KEY = \"jsType\";\n  var EXPOSE_ERR_PROP_KEY = \"exposeError\";\n  var CLIENT_CONFIG_PROP_KEY = \"clientConfig\";\n  var AUTO_CONTRACT_PROP_KEY = \"autoCreateContract\";\n  var VALIDATE_RETURNS_PROP_KEY = \"validateReturns\";\n  var ENABLE_UPLOAD_PROP_KEY = \"enableFileUpload\";\n  var FILE_UPLOAD_NAME_PROP_KEY = \"fileUploadName\";\n  var FILE_UPLOAD_DIST_PROP_KEY = \"fileUploadDist\";\n  var FILE_HANDLER_FN_NAME_PROP_KEY = \"fileHandlerName\";\n  var ENABLE_SPLIT_TASK_PROP_KEY = \"enableSplitTask\";\n  var CONNECTED_PROP_KEY = \"connected\";\n  var CACHE_STORE_PROP_KEY = \"cacheStore\";\n  var EVENT_EMITTER_PROP_KEY = \"eventEmitter\";\n  var SUSPEND_EVENT_PROP_KEY = \"suspendOnStart\";\n  var ENABLE_CACHE_RESOLVER_PROP_KEY = \"enableCacheResolver\";\n  var TOKEN_DELIVER_LOCATION_PROP_KEY = \"tokenDeliverLocation\";\n  var COOKIE_PROP_KEY = \"cookie\";\n  var IS_READY_PROP_KEY = \"isReady\";\n  var IS_LOGIN_PROP_KEY = \"isLogin\";\n\n  // src/socket.mjs\n  var SOCKET_PING_EVENT_NAME = \"__ping__\";\n  var SWITCH_USER_EVENT_NAME = \"__switch__\";\n  var LOGIN_EVENT_NAME = \"__login__\";\n  var LOGOUT_EVENT_NAME = \"__logout__\";\n  var SA_LOGIN_EVENT_NAME = \"__standalone_login__\";\n  var SOCKET_CLIENT_ID_KEY = \"__socket_client_id_key__\";\n  var SOCKET_CLIENT_TS_KEY = \"__socket_client_ts_key__\";\n  var CONNECT_EVENT_NAME = \"__connect__\";\n  var CONNECTED_EVENT_NAME = \"__connected__\";\n  var DISCONNECT_EVENT_NAME = \"__disconnect__\";\n  var INTERCOM_RESOLVER_NAME = \"__intercom__\";\n  var INTER_COM_EVENT_NAMES = [\n    CONNECT_EVENT_NAME,\n    SWITCH_USER_EVENT_NAME,\n    DISCONNECT_EVENT_NAME\n  ];\n  var WS_REPLY_TYPE = \"__reply__\";\n  var WS_EVT_NAME = \"__event__\";\n  var WS_DATA_NAME = \"__data__\";\n  var WS_IS_REPLY_KEYS = [\n    WS_REPLY_TYPE,\n    WS_EVT_NAME,\n    WS_DATA_NAME\n  ];\n  var ON_MESSAGE_FN_NAME = \"onMessage\";\n  var ON_RESULT_FN_NAME = \"onResult\";\n  var ON_ERROR_FN_NAME = \"onError\";\n  var ON_READY_FN_NAME = \"onReady\";\n  var ON_LOGIN_FN_NAME = \"onLogin\";\n  var SEND_MSG_FN_NAME = \"send\";\n  var EMIT_MSG_FN_NAME = \"emit\";\n  var ON_MSG_FN_NAME = \"on\";\n  var TO_MSG_FN_NAME = \"to\";\n  var CLIENT_PROP_NAME = \"client\";\n  var USERDATA_PROP_NAME = \"userdata\";\n  var EMIT_REPLY_TYPE = \"emit_reply\";\n  var EMIT_SEND_TYPE = \"emit_send\";\n  var ACKNOWLEDGE_REPLY_TYPE = \"emit_acknowledge\";\n  var INTER_EMIT_SEND_TYPE = \"inter_emit_send\";\n  var INTER_EMIT_REPLY_TYPE = \"inter_emit_reply\";\n  var NSP_GROUP = \"nspGroup\";\n  var PUBLIC_NAMESPACE = \"publicNamespace\";\n  var JS_WS_SOCKET_IO_NAME = \"socket.io\";\n  var JS_WS_NAME = \"ws\";\n  var JS_PRIMUS_NAME = \"primus\";\n  var GO_WS_COOLPY7_NAME = \"coolpy7\";\n  var DEFAULT_WS_WAIT_TIME = 5e3;\n  var DEFAULT_RETRY_TIME = 3e3;\n  var TIMEOUT_ERR_MSG = \"timeout\";\n  var NOT_LOGIN_ERR_MSG = \"NOT LOGIN\";\n  var BASE64_FORMAT = \"base64\";\n  var HEX_FORMAT = \"hex\";\n  var UTF8_FORMAT = \"utf8\";\n  var RSA_FORMATS = [\n    BASE64_FORMAT,\n    HEX_FORMAT\n  ];\n  var RSA_ALGO = \"RS256\";\n  var HSA_ALGO = \"HS256\";\n  var JWT_SUPPORT_ALGOS = [\n    RSA_ALGO,\n    HSA_ALGO\n  ];\n  var RSA_PRIVATE_KEY_HEADER = \"BEGIN RSA PRIVATE KEY\";\n  var RSA_MIN_MODULE_LEN = 1024;\n  var RSA_MAX_MODULE_LEN = 4096;\n  var TOKEN_PARAM_NAME = \"token\";\n  var IO_ROUNDTRIP_LOGIN = \"roundtip\";\n  var IO_HANDSHAKE_LOGIN = \"handshake\";\n  var IO_LOGIN_METHODS = [\n    IO_ROUNDTRIP_LOGIN,\n    IO_HANDSHAKE_LOGIN\n  ];\n  var PEM_EXT = \"pem\";\n  var PUBLIC_KEY_NAME = \"publicKey\";\n  var PRIVATE_KEY_NAME = \"privateKey\";\n  var DEFAULT_PUBLIC_KEY_FILE = [PUBLIC_KEY_NAME, PEM_EXT].join(\".\");\n  var DEFAULT_PRIVATE_KEY_FILE = [PRIVATE_KEY_NAME, PEM_EXT].join(\".\");\n  var NSP_AUTH_CLIENT = \"nspAuthClient\";\n  var NSP_CLIENT = \"nspClient\";\n  var TOKEN_IN_HEADER = \"header\";\n  var TOKEN_IN_URL = \"url\";\n\n  // src/validation.mjs\n  var OR_SEPERATOR = \"|\";\n  var FUNCTION_TYPE = \"function\";\n  var STRING_TYPE = \"string\";\n  var BOOLEAN_TYPE = \"boolean\";\n  var ARRAY_TYPE = \"array\";\n  var OBJECT_TYPE = \"object\";\n  var ANY_TYPE = \"any\";\n  var NUMBER_TYPE = \"number\";\n  var NUMBER_TYPES = [\"int\", \"integer\", \"float\", \"double\", \"decimal\"];\n  var SUPPORTED_TYPES = [\n    NUMBER_TYPE,\n    STRING_TYPE,\n    BOOLEAN_TYPE,\n    ARRAY_TYPE,\n    OBJECT_TYPE,\n    ANY_TYPE\n  ];\n  var ARRAY_TS_TYPE_LFT = \"Array<\";\n  var ARRAY_TYPE_LFT = \"array.<\";\n  var ARRAY_TYPE_RGT = \">\";\n})();\n", "// group all the constants one place\nimport {\n  NOT_ACCEPTABLE_STATUS,\n  UNAUTHORIZED_STATUS,\n  FORBIDDEN_STATUS,\n  NOT_FOUND_STATUS,\n  SERVER_INTERNAL_STATUS,\n  NO_STATUS_CODE,\n  NO_ERROR_MSG\n} from '@jsonql/constants'\n\nconst UNKNOWN_ERROR = 'unknown_error'\nconst JSONQL_ERRORS_INFO = '__PLACEHOLDER__'\n\nexport {\n  NOT_ACCEPTABLE_STATUS,\n  UNAUTHORIZED_STATUS,\n  FORBIDDEN_STATUS,\n  NOT_FOUND_STATUS,\n  SERVER_INTERNAL_STATUS,\n  NO_STATUS_CODE,\n  NO_ERROR_MSG,\n  // ours\n  UNKNOWN_ERROR,\n  JSONQL_ERRORS_INFO\n}\n", "import { NOT_ACCEPTABLE_STATUS } from '../constants'\n/**\n * This is a custom error to throw when server throw a 406\n * This help us to capture the right error, due to the call happens in sequence\n * @param {string} message to tell what happen\n * @param {mixed} extra things we want to add, 500?\n */\nexport default class Jsonql406Error extends Error {\n  detail: any\n  className: string\n\n  constructor(...args: any[]) {\n    super(...args)\n    this.message = args[0]\n    this.detail = args[1]\n    // We can't access the static name from an instance\n    // but we can do it like this\n    this.className = Jsonql406Error.name\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, Jsonql406Error)\n    }\n  }\n\n  static get statusCode() {\n    return NOT_ACCEPTABLE_STATUS\n  }\n\n}\n", "import { SERVER_INTERNAL_STATUS } from '../constants'\n\n/**\n * This is a custom error to throw when server throw a 500\n * This help us to capture the right error, due to the call happens in sequence\n * @param {string} message to tell what happen\n * @param {mixed} extra things we want to add, 500?\n */\nexport default class Jsonql500Error extends Error {\n  detail: any\n  className: string\n\n  constructor(...args: any[]) {\n    super(...args)\n\n    this.message = args[0]\n    this.detail = args[1]\n\n    this.className = Jsonql500Error.name\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, Jsonql500Error)\n    }\n  }\n\n  static get statusCode() {\n    return SERVER_INTERNAL_STATUS\n  }\n}\n", "import { FORBIDDEN_STATUS } from '../constants'\n/**\n * this is the 403 Forbidden error\n * that means this user is not login\n * use the 401 for try to login and failed\n * @param {string} message to tell what happen\n * @param {mixed} extra things we want to add, 500?\n */\nexport default class JsonqlForbiddenError extends Error {\n  detail: any\n  className: string\n\n  constructor(...args: any[]) {\n    super(...args)\n    this.message = args[0]\n    this.detail = args[1]\n\n    this.className = JsonqlForbiddenError.name;\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, JsonqlForbiddenError)\n    }\n  }\n\n  static get statusCode() {\n    return FORBIDDEN_STATUS\n  }\n}\n", "import { UNAUTHORIZED_STATUS  } from '../constants'\n/**\n * This is a custom error to throw when pass credential but fail\n * This help us to capture the right error, due to the call happens in sequence\n * @param {string} message to tell what happen\n * @param {mixed} extra things we want to add, 500?\n */\nexport default class JsonqlAuthorisationError extends Error {\n  detail: any\n  className: string\n\n  constructor(...args: any[]) {\n    super(...args)\n    this.message = args[0]\n    this.detail = args[1]\n\n    this.className = JsonqlAuthorisationError.name;\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, JsonqlAuthorisationError)\n    }\n  }\n\n  static get statusCode() {\n    return UNAUTHORIZED_STATUS\n  }\n\n}\n", "import { UNAUTHORIZED_STATUS } from '../constants'\n\n/**\n * This is a custom error when not supply the credential and try to get contract\n * This help us to capture the right error, due to the call happens in sequence\n * @param {string} message to tell what happen\n * @param {mixed} extra things we want to add, 500?\n */\nexport default class JsonqlContractAuthError extends Error {\n  detail: any\n  className: string\n\n  constructor(...args: any[]) {\n    super(...args)\n    this.message = args[0]\n    this.detail = args[1]\n\n    this.className = JsonqlContractAuthError.name\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, JsonqlContractAuthError)\n    }\n  }\n\n  static get statusCode() {\n    return UNAUTHORIZED_STATUS\n  }\n\n}\n", "import { SERVER_INTERNAL_STATUS } from '../constants'\n/**\n * This is a custom error to throw when the resolver throw error and capture inside the middleware\n * This help us to capture the right error, due to the call happens in sequence\n * @param {string} message to tell what happen\n * @param {mixed} extra things we want to add, 500?\n */\nexport default class JsonqlResolverAppError extends Error {\n  detail: any\n  className: string\n\n  constructor(...args: any[]) {\n    super(...args)\n\n    this.message = args[0]\n    this.detail = args[1]\n\n    this.className = JsonqlResolverAppError.name\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, JsonqlResolverAppError)\n    }\n  }\n\n  static get statusCode() {\n    return SERVER_INTERNAL_STATUS\n  }\n}\n", "import { NOT_FOUND_STATUS } from '../constants'\n/**\n * This is a custom error to throw when could not find the resolver\n * This help us to capture the right error, due to the call happens in sequence\n * @param {string} message to tell what happen\n * @param {mixed} extra things we want to add, 500?\n */\nexport default class JsonqlResolverNotFoundError extends Error {\n  detail: any\n  className: string\n\n  constructor(...args: any[]) {\n    super(...args)\n\n    this.message = args[0]\n    this.detail = args[1]\n\n    this.className = JsonqlResolverNotFoundError.name;\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, JsonqlResolverNotFoundError);\n    }\n  }\n\n  static get statusCode() {\n    return NOT_FOUND_STATUS\n  }\n}\n", "// this get throw from within the checkOptions when run through the enum failed\nexport default class JsonqlEnumError extends Error {\n  detail: any\n  className: string\n\n  constructor(...args: any[]) {\n    super(...args)\n\n    this.message = args[0]\n    this.detail = args[1]\n\n    this.className = JsonqlEnumError.name;\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, JsonqlEnumError)\n    }\n  }\n\n}\n", "// this will throw from inside the checkOptions\nexport default class JsonqlTypeError extends Error {\n  detail: any\n  className: string\n\n  constructor(...args: any[]) {\n    super(...args)\n\n    this.message = args[0]\n    this.detail = args[1]\n\n    this.className = JsonqlTypeError.name\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, JsonqlTypeError)\n    }\n  }\n}\n", "// allow supply a custom checker function\n// if that failed then we throw this error\nexport default class JsonqlCheckerError extends Error {\n  detail: any\n  className: string\n\n  constructor(...args: any) {\n    super(...args)\n    this.message = args[0]\n    this.detail = args[1]\n\n    this.className = JsonqlCheckerError.name\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, JsonqlCheckerError)\n    }\n  }\n}\n", "// custom validation error class\n// when validaton failed\n// should there also be a errors result somewhere \n\nexport default class JsonqlValidationError extends Error {\n  detail: any\n  className: string\n\n  constructor(...args: any[]) {\n    super(...args)\n\n    this.message = args[0]\n    this.detail = args[1]\n\n    this.className = JsonqlValidationError.name;\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, JsonqlValidationError)\n    }\n  }\n\n}\n", "import { NO_STATUS_CODE } from '../constants'\n\n/**\n * This is a custom error to throw whenever a error happen inside the jsonql\n * This help us to capture the right error, due to the call happens in sequence\n * @param {string} message to tell what happen\n * @param {mixed} extra things we want to add, 500?\n */\nexport default class JsonqlError extends Error {\n  detail: any\n  className: string\n\n  constructor(...args: any[]) {\n    super(...args)\n\n    this.message = args[0]\n    this.detail = args[1]\n\n    this.className = JsonqlError.name\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, JsonqlError)\n      // this.detail = this.stack;\n    }\n  }\n\n  static get statusCode() {\n    return NO_STATUS_CODE\n  }\n}\n", "import { SERVER_INTERNAL_STATUS } from '../constants'\n\n// this is from an example from Koa team to use for internal middleware ctx.throw\n// but after the test the res.body part is unable to extract the required data\n// I keep this one here for future reference\n\nexport default class JsonqlServerError extends Error {\n  statusCode: string | number\n  className: string\n\n  constructor(statusCode: string | number, message?: string) {\n    super(message)\n    this.statusCode = statusCode\n    this.className = JsonqlServerError.name\n  }\n\n  static get statusCode() {\n    return SERVER_INTERNAL_STATUS\n  }\n}\n", "// this is a new Error class that is not part of the Jsonql\n// but we will use it in other external modules\n\nexport default class GeneralError extends Error {\n  detail: any\n  className: string\n\n  constructor(...args: any[]) {\n    super(...args)\n\n    this.message = args[0]\n    this.detail = args[1]\n\n    this.className = GeneralError.name\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GeneralError)\n    }\n  }\n}\n", "import {\n Jsonql406Error,\n Jsonql500Error,\n JsonqlForbiddenError,\n JsonqlAuthorisationError,\n JsonqlContractAuthError,\n JsonqlResolverAppError,\n JsonqlResolverNotFoundError,\n// check options error\n JsonqlEnumError,\n JsonqlTypeError,\n JsonqlCheckerError,\n// share\n JsonqlValidationError,\n JsonqlError,\n JsonqlServerError,\n} from '../base'\nimport { NO_ERROR_MSG } from '../constants'\n\n\n/**\n * If using the instance of could not find the actual error then\n * we need to use a different way to analysis the error object to find the exact\n * Error type\n */\n /*\nfunction getErrorByObject(e: any, msg: any, detail: any) {\n  // @TODO\n}\n*/\n\n/**\n * this will put into generator call at the very end and catch\n * the error throw from inside then throw again\n * this is necessary because we split calls inside and the throw\n * will not reach the actual client unless we do it this way\n */\nexport default function finalCatch(e: any) {\n  // this is a hack to get around the validateAsync not actually throw error\n  // instead it just rejected it with the array of failed parameters\n  if (Array.isArray(e)) {\n    // if we want the message then I will have to create yet another function\n    // to wrap this function to provide the name prop\n    throw new JsonqlValidationError('', e)\n  }\n  const msg = e.message || NO_ERROR_MSG\n  const detail = e.detail || e\n  // @BUG the instance of not always work for some reason!\n  // need to figure out a better way to find out the type of the error\n  switch (true) {\n    case e instanceof Jsonql406Error:\n      throw new Jsonql406Error(msg, detail)\n    case e instanceof Jsonql500Error:\n      throw new Jsonql500Error(msg, detail)\n    case e instanceof JsonqlForbiddenError:\n      throw new JsonqlForbiddenError(msg, detail)\n    case e instanceof JsonqlAuthorisationError:\n      throw new JsonqlAuthorisationError(msg, detail)\n    case e instanceof JsonqlContractAuthError:\n      throw new JsonqlContractAuthError(msg, detail)\n    case e instanceof JsonqlResolverAppError:\n      throw new JsonqlResolverAppError(msg, detail)\n    case e instanceof JsonqlResolverNotFoundError:\n      throw new JsonqlResolverNotFoundError(msg, detail)\n    case e instanceof JsonqlEnumError:\n      throw new JsonqlEnumError(msg, detail)\n    case e instanceof JsonqlTypeError:\n      throw new JsonqlTypeError(msg, detail)\n    case e instanceof JsonqlCheckerError:\n      throw new JsonqlCheckerError(msg, detail)\n    case e instanceof JsonqlValidationError:\n      throw new JsonqlValidationError(msg, detail)\n    case e instanceof JsonqlServerError:\n      throw new JsonqlServerError(msg, detail)\n    default:\n      throw new JsonqlError(msg, detail)\n  }\n}\n", "// just a simple util method to return the error based on the status code\nimport {\n  UNAUTHORIZED_STATUS,\n  FORBIDDEN_STATUS,\n  NOT_FOUND_STATUS,\n  NOT_ACCEPTABLE_STATUS,\n  SERVER_INTERNAL_STATUS\n} from '../constants'\n\n/**\n * use the status code to find the right type of error \n */\nexport default function getErrorByStatus(statusCode: string | number, contract = false): string {\n  switch (statusCode) {\n    case UNAUTHORIZED_STATUS:\n      return contract ? 'JsonqlContractAuthError' : 'JsonqlAuthorisationError'\n    case FORBIDDEN_STATUS:\n      return 'JsonqlForbiddenError'\n    case NOT_FOUND_STATUS:\n      return 'JsonqlResolverNotFoundError'\n    case NOT_ACCEPTABLE_STATUS:\n      return 'Jsonql406Error'\n    case SERVER_INTERNAL_STATUS:\n      return 'Jsonql500Error'\n    default:\n      return 'JsonqlError'\n  }\n}\n", "// get error name by instance\nimport { UNKNOWN_ERROR } from '../constants'\n\n/**\n * @param {array} errs list of errors to compare from\n * @param {object} e the error captured\n * @return {array} filtered with name as value\n */\nfunction mapErrToName(errs: any[], e: any): Array<string> {\n\n  return errs.filter((err: any) => e instanceof err)\n    .map((err: any) => err.name)\n}\n\n/**\n * just what the name said\n * default return the UNKNOWN_ERROR\n */\nexport function getErrorNameByInstance(errs: any[], e: any) {\n  let error = mapErrToName(errs, e)\n\n  return error.length ? error[0] : UNKNOWN_ERROR\n}\n\n/**\n * the same as above with a default JsonqlError as default\n */\nexport function getErrorNameByInstanceWithDefault(errs: any[], e: any): string {\n  let name = getErrorNameByInstance(errs, e)\n\n  return name === UNKNOWN_ERROR ? 'JsonqlError' : name\n}\n"],
  "mappings": "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",
  "names": []
}
